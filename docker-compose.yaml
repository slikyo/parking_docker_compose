version: '3'
services:

  flask:
    build:
      context: ./services/flask
      dockerfile: Dockerfile
    container_name: city-sensing-flask
    image: city-sensing:v1
    restart: unless-stopped
    environment:
      APP_DEBUG: ${FLASK_DEBUG_IN}
      APP_PORT: ${FLASK_PORT_IN}
      DOMAIN_NAME: ${FLASK_DOMAIN_NAME}
      #      MONGODB_DATABASE: flaskdb
      #      MONGODB_USERNAME: flaskuser
      #      MONGODB_PASSWORD: your_mongodb_password
      MONGODB_HOSTNAME: mongodb
    ports:
      - ${FLASK_PORT_OUT}:${FLASK_PORT_IN}
    volumes:
      - static_volume:/city-sensing/src/static
    depends_on:
      - mongodb
    networks:
      - frontend
      - backend

  mongodb:
    image: mongo:4.0.8
    container_name: city-sensing-mongodb
    restart: unless-stopped
    command: mongod
    environment:
      #      MONGO_INITDB_ROOT_USERNAME: mongodbuser
      #      MONGO_INITDB_ROOT_PASSWORD: your_mongodb_root_password
      #      MONGO_INITDB_DATABASE: flaskdb
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - mongodbdata:/data/db
    networks:
      - backend

  nginx:
    image: nginx:1.15.7-alpine
    container_name: city-sensing-nginx
    volumes:
      - static_volume:/city-sensing/src/static
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_PROXY_PARAMS}:/etc/nginx/proxy_params:rw
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    restart: unless-stopped
    ports:
      - ${NGINX_PORT}:80
    depends_on:
      - flask
    networks:
      - frontend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
  static_volume:
    driver: local
#  nginxdata:
#    driver: local